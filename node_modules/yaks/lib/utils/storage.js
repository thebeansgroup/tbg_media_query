// Generated by CoffeeScript 1.9.1
(function() {
  var Storage;

  Storage = (function() {
    var STORAGE, STORAGE_TESTED, _checkStorage, _testStorage;

    function Storage() {}

    STORAGE = true;

    STORAGE_TESTED = false;

    _checkStorage = function() {
      if (STORAGE_TESTED) {
        return STORAGE;
      } else {
        return _testStorage();
      }
    };

    _testStorage = function() {
      var e;
      STORAGE_TESTED = true;
      if (typeof (window.Storage != null)) {
        try {
          window.localStorage.setItem('teststorage', 1);
          window.localStorage.removeItem('teststorage');
          return STORAGE = true;
        } catch (_error) {
          e = _error;
          return STORAGE = false;
        }
      } else {
        return STORAGE = false;
      }
    };

    Storage.prototype.setLocal = function(name, value) {
      if (_checkStorage()) {
        return window.localStorage.setItem(name, JSON.stringify(value));
      }
    };

    Storage.prototype.setSession = function(name, value) {
      if (_checkStorage()) {
        return window.sessionStorage.setItem(name, JSON.stringify(value));
      }
    };

    Storage.prototype.getLocal = function(name) {
      if (_checkStorage()) {
        return JSON.parse(window.localStorage.getItem(name));
      }
    };

    Storage.prototype.getSession = function(name) {
      if (_checkStorage()) {
        return JSON.parse(window.sessionStorage.getItem(name));
      }
    };

    Storage.prototype.removeLocal = function(name) {
      if (_checkStorage()) {
        return window.localStorage.removeItem(name);
      }
    };

    Storage.prototype.removeSession = function(name) {
      if (_checkStorage()) {
        return window.sessionStorage.removeItem(name);
      }
    };

    return Storage;

  })();

  module.exports = new Storage();

}).call(this);
