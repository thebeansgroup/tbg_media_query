// Generated by CoffeeScript 1.9.2
var MediaQuery, React, ResizeMonitor, Yaks, canUseDOM,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

React = require('react');

Yaks = require('yaks');

ResizeMonitor = require('./resize');

canUseDOM = Yaks.UTILS.canUseDOM;

MediaQuery = (function(superClass) {
  extend(MediaQuery, superClass);

  MediaQuery.displayName = 'MediaQuery';

  MediaQuery.defaultProps = {
    component: 'div',
    componentProps: {},
    defaultBreakpoint: 'mother',
    breakpoints: {}
  };

  function MediaQuery(props) {
    MediaQuery.__super__.constructor.call(this, props);
    this.state = {
      breakpoint: null
    };
  }

  MediaQuery.prototype.hasCurrentBreakpoint = function() {
    return this._getBreakpointRenderMethod() != null;
  };

  MediaQuery.prototype.componentDidMount = function() {
    this.componentMounted = true;
    if (canUseDOM) {
      this._onChange();
    }
    return ResizeMonitor.addChangeListener(this._onChange.bind(this));
  };

  MediaQuery.prototype.componentWillUnmount = function() {
    this.componentMounted = false;
    return ResizeMonitor.removeChangeListener(this._onChange);
  };

  MediaQuery.prototype._getBreakpointFromBody = function() {
    if (window.getComputedStyle == null) {
      return '';
    }
    return window.getComputedStyle(document.body, ':after').getPropertyValue('content').replace('-', '').replace(/'/g, '').replace(/"/g, '') || '';
  };

  MediaQuery.prototype._getBreakpointRenderMethod = function() {
    return this.props.breakpoints[this.state.breakpoint || this.props.defaultBreakpoint];
  };

  MediaQuery.prototype._onChange = function() {
    if (this.componentMounted) {
      return this.setState({
        breakpoint: this._getBreakpointFromBody()
      });
    }
  };

  MediaQuery.prototype.render = function() {
    if (!this.hasCurrentBreakpoint()) {
      return null;
    }
    return React.createElement(this.props.component, this.props.componentProps, this._getBreakpointRenderMethod());
  };

  return MediaQuery;

})(React.Component);

module.exports = MediaQuery;
